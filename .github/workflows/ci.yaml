name: ci

on:
  push:
    branches:
      - main
  pull_request: {}

permissions:
  contents: read
  actions: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: actions/setup-python@v3
      - uses: pre-commit/action@v3.0.1
      - name: Check the documentation of lib.rs is in the README
        run: |
          cargo install cargo-rdme
          cargo rdme --check

  lint-chamgelog:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v3
        env:
          OUTPUT: CHANGELOG.md

      - name: Verify no changes to CHANGELOG.md
        run: |
          if ! git diff --exit-code; then
          echo 'Changes detected to the CHANGELOG.md, you must generate the CHANGELOG.md with `git cliff` and commit the changes.'
          exit 1
          fi

  unit-tests-sqlx-0-8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      - name: Run doc tests sqlite
        run: cargo test --doc --workspace --features sqlite

      - name: Run doc tests postgres
        run: cargo test --doc --workspace --features postgres

      - name: Run lib tests on sqlite
        run: cargo test --lib --workspace --features sqlite

      - name: Run lib tests on postgres
        run: cargo test --lib --workspace --features postgres

      - name: Run lib tests on mysql
        run: cargo test --lib --workspace --features mysql

      - name: Run the integration tests on Sqlite only
        run: cargo test --tests --features sqlite

  unit-tests-sqlx-0-7:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: sqlx-0.7

      - name: Change the version of sqlx in the Cargo.toml
        run: |
            sed -i 's/version = "0.8.3"/version = "0.7.4"/g' Cargo.toml
            sed -i 's/version = "0.8.3"/version = "0.7.4"/g' tiny-orm-macros/Cargo.toml

      - name: Run doc tests sqlite
        run: cargo test --doc --workspace --features sqlite --features sqlx-0.7

      - name: Run doc tests postgres
        run: cargo test --doc --workspace --features postgres --features sqlx-0.7

      - name: Run lib tests on sqlite
        run: cargo test --lib --workspace --features sqlite --features sqlx-0.7

      - name: Run lib tests on postgres
        run: cargo test --lib --workspace --features postgres --features sqlx-0.7

      - name: Run lib tests on mysql
        run: cargo test --lib --workspace --features mysql --features sqlx-0.7

      - name: Run the integration tests on Sqlite only
        run: cargo test --tests --features sqlite --features sqlx-0.7

  example-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: examples
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      mysql:
        image: mysql:9
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: examples
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Run tests on sqlite
        run: cargo run --example sqlite --features sqlite

      - name: Run tests on sqlite-setoption
        run: cargo run --example sqlite-setoption --features sqlite

      - name: Run tests on sqlite-soft-deletion
        run: cargo run --example sqlite-soft-deletion --features sqlite

      - name: Run tests on Postgres
        run: cargo run --example postgres --features postgres

      - name: Run tests on postgres-soft-deletion
        run: cargo run --example postgres-soft-deletion --features postgres

      - name: Run tests on Mysql
        run: cargo run --example mysql --features mysql
